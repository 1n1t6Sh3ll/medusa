{
    "Name": "exploits/jetpack_trigger_inner_fragment",
    "Description": "dump the navigation graph IDs and displays the androidx.navigation.NavController class name (in case of obfuscation)",
    "Help": "https://swarm.ptsecurity.com/android-jetpack-navigation-deep-links-handling-exploitation/, test with flag 0x008000",
    "Code": "

{
    setTimeout(tryGetFragments, 5000);
    const bundleClass = 'android.os.Bundle'
    let bundle = Java.use(bundleClass);
  
    function tryGetFragments(){
      Java.choose('androidx.navigation.NavGraph',
      {
          onMatch: function(instance)
          {
              colorLog('{\\n Graph with id='+instance.id.value + ' ' + instance, {c:Color.Blue});
              let nodeToStr = instance.nodes.value.toString();
              let keyValuePairs = nodeToStr.substring(1,nodeToStr.length-1).split(', ');
              keyValuePairs.forEach(function(pair) {
                log('\\t'+pair)
              });
              colorLog('}',{c:Color.Blue})
          },
          onComplete: function() {}
      });
    }
    bundle.getBundle.implementation = function(innerBundle){
      if(innerBundle == 'android-support-nav:controller:deepLinkExtras')
      {
        const msg = 'NavController implementation detected!';
        styleLog(msg,[msg],StyleLogColorset.red,StyleLogColorset.green);
        let stackTrace = Java.use('java.lang.Thread').currentThread().getStackTrace();
        let exceptionStackIndex = stackTrace.findIndex(stack => stack.getClassName() === bundleClass);
        let callingFunctionStack = stackTrace[exceptionStackIndex + 1];
        let navControllerClassName = callingFunctionStack.getClassName();
        colorLog('Implementation Class: '+navControllerClassName,{c:Color.Yellow});
      }
      return this.getBundle(innerBundle);
    }
  
}
"
}
